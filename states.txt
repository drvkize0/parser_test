73 states
.M0<91, 0, start> =
	shift to R1<91, 0, start> =  by <type_object> <ident>
	shift to R1<91, 0, start> =  by <type_bool> <ident>
	shift to R1<91, 0, start> =  by <type_int> <ident>
	shift to R1<91, 0, start> =  by <type_float> <ident>
	shift to R1<91, 0, start> =  by <type_string> <ident>
	shift to R1<91, 0, start> =  by <type_list> <ident>
	shift to R2<60, 0, stmt_assign> =  by <ident>
	shift to R3<27, 0, member> =  by <at> <ident>
	shift to R4<28, 0, member> =  by <ident>
	shift to R1<91, 0, start> =  by <lbrace> <rbrace>
	shift to M18<89, 1, block> =  by <lbrace>
	shift to M35<90, 1, block> =  by <lbrace>
.R1<91, 0, start> =
.R2<60, 0, stmt_assign> =
	shift to M5<60, 2, stmt_assign> =  by <assign>
.R3<27, 0, member> =
	shift to R2<60, 0, stmt_assign> =  by <dot> <ident>
.R4<28, 0, member> =
	shift to R2<60, 0, stmt_assign> =  by <dot> <ident>
.M5<60, 2, stmt_assign> = <lvalue> <assign>
	shift to R1<91, 0, start> =  by <null>
	shift to R1<91, 0, start> =  by <true>
	shift to R1<91, 0, start> =  by <false>
	shift to R1<91, 0, start> =  by <integer>
	shift to R1<91, 0, start> =  by <float>
	shift to R1<91, 0, start> =  by <string_literal>
	shift to R1<91, 0, start> =  by <ident>
	shift to M7<10, 1, op_logic> =  by <linv>
	shift to R15<46, 0, object> =  by <lpare> <rpare>
	shift to M10<39, 1, expr_list_in_pares> =  by <lpare>
	shift to R19<89, 1, block> =  by <null>
	shift to R19<89, 1, block> =  by <true>
	shift to R19<89, 1, block> =  by <false>
	shift to R19<89, 1, block> =  by <integer>
	shift to R19<89, 1, block> =  by <float>
	shift to R19<89, 1, block> =  by <string_literal>
	shift to R19<89, 1, block> =  by <ident>
.R6<6, 0, op_arithmatic> =
	shift to M66<6, 2, op_arithmatic> =  by <add>
.M7<10, 1, op_logic> = <linv>
	shift to M8<19, 1, op_bit> =  by <binv>
.M8<19, 1, op_bit> = <binv>
	shift to M9<47, 1, invoke> =  by <ident>
.M9<47, 1, invoke> = <ident>
	shift to R6<6, 0, op_arithmatic> =  by <lpare> <rpare>
	shift to M10<39, 1, expr_list_in_pares> =  by <lpare>
.M10<39, 1, expr_list_in_pares> = <lpare>
	shift to R12<45, 0, object> =  by <lbracket> <rbracket>
	shift to M13<44, 1, tag_list> =  by <lbracket>
.R11<39, 1, expr_list_in_pares> = <lpare>
	shift to R15<46, 0, object> =  by <rpare>
	shift to R45<45, 1, object> =  by <rpare>
	shift to R6<6, 0, op_arithmatic> =  by <rpare>
.R12<45, 0, object> =
	shift to R45<45, 1, object> =  by <lpare> <rpare>
	shift to M10<39, 1, expr_list_in_pares> =  by <lpare>
.M13<44, 1, tag_list> = <lbracket>
.R14<44, 1, tag_list> = <lbracket>
	shift to R12<45, 0, object> =  by <rbracket>
.R15<46, 0, object> =
	shift to R14<44, 1, tag_list> =  by <lbrace> <rbrace>
	shift to M18<89, 1, block> =  by <lbrace>
	shift to M35<90, 1, block> =  by <lbrace>
.R16<33, 0, expr_list> =
	shift to M17<33, 2, expr_list> =  by <comma>
.M17<33, 2, expr_list> = <expr_list> <comma>
.M18<89, 1, block> = <lbrace>
	shift to M20<65, 2, stmt_if> =  by <if> <lpare>
	shift to R24<61, 0, stmt_assign> =  by <ident>
	shift to R26<62, 0, stmt_assign> =  by <ident>
	shift to R28<63, 0, stmt_assign> =  by <ident>
	shift to R30<64, 0, stmt_assign> =  by <ident>
	shift to M32<66, 2, stmt_elif> =  by <elif> <lpare>
	shift to M37<67, 1, stmt_else> =  by <else>
	shift to M38<68, 2, stmt_while> =  by <while> <lpare>
	shift to M41<69, 6, stmt_for> =  by <for> <lpare> <ident> <in> <ident> <rpare>
	shift to R23<87, 0, stmts> =  by <break>
	shift to R23<87, 0, stmts> =  by <continue>
	shift to R23<87, 0, stmts> =  by <yield>
	shift to R23<87, 0, stmts> =  by <return>
	shift to M42<74, 1, stmt_return> =  by <return>
	shift to R19<89, 1, block> =  by <type_object> <ident>
	shift to R19<89, 1, block> =  by <type_bool> <ident>
	shift to R19<89, 1, block> =  by <type_int> <ident>
	shift to R19<89, 1, block> =  by <type_float> <ident>
	shift to R19<89, 1, block> =  by <type_string> <ident>
	shift to R19<89, 1, block> =  by <type_list> <ident>
	shift to R2<60, 0, stmt_assign> =  by <ident>
	shift to R3<27, 0, member> =  by <at> <ident>
	shift to R4<28, 0, member> =  by <ident>
.R19<89, 1, block> = <lbrace>
	shift to R23<87, 0, stmts> =  by <rbrace>
	shift to R36<90, 1, block> =  by <rbrace>
	shift to R19<89, 1, block> =  by <rbrace>
	shift to R14<44, 1, tag_list> =  by <rbrace>
	shift to R11<39, 1, expr_list_in_pares> =  by <rbrace>
	shift to R1<91, 0, start> =  by <rbrace>
.M20<65, 2, stmt_if> = <if> <lpare>
.R21<65, 2, stmt_if> = <if> <lpare>
	shift to M22<65, 4, stmt_if> =  by <rpare>
.M22<65, 4, stmt_if> = <if> <lpare> <rvalue> <rpare>
	shift to R19<89, 1, block> =  by <lbrace> <rbrace>
	shift to M18<89, 1, block> =  by <lbrace>
	shift to M35<90, 1, block> =  by <lbrace>
	shift to R23<87, 0, stmts> =  by <lbrace> <rbrace>
.R23<87, 0, stmts> =
.R24<61, 0, stmt_assign> =
	shift to M25<61, 2, stmt_assign> =  by <add_assign>
.M25<61, 2, stmt_assign> = <lvalue> <add_assign>
.R26<62, 0, stmt_assign> =
	shift to M27<62, 2, stmt_assign> =  by <sub_assign>
.M27<62, 2, stmt_assign> = <lvalue> <sub_assign>
.R28<63, 0, stmt_assign> =
	shift to M29<63, 2, stmt_assign> =  by <mul_assign>
.M29<63, 2, stmt_assign> = <lvalue> <mul_assign>
.R30<64, 0, stmt_assign> =
	shift to M31<64, 2, stmt_assign> =  by <div_assign>
.M31<64, 2, stmt_assign> = <lvalue> <div_assign>
.M32<66, 2, stmt_elif> = <elif> <lpare>
.R33<66, 2, stmt_elif> = <elif> <lpare>
	shift to M34<66, 4, stmt_elif> =  by <rpare>
.M34<66, 4, stmt_elif> = <elif> <lpare> <rvalue> <rpare>
	shift to R23<87, 0, stmts> =  by <lbrace> <rbrace>
	shift to M18<89, 1, block> =  by <lbrace>
	shift to M35<90, 1, block> =  by <lbrace>
.M35<90, 1, block> = <lbrace>
	shift to R36<90, 1, block> =  by <lbrace> <rbrace>
	shift to M18<89, 1, block> =  by <lbrace>
	shift to M35<90, 1, block> =  by <lbrace>
.R36<90, 1, block> = <lbrace>
	shift to R36<90, 1, block> =  by <rbrace>
	shift to R23<87, 0, stmts> =  by <rbrace>
	shift to R19<89, 1, block> =  by <rbrace>
	shift to R14<44, 1, tag_list> =  by <rbrace>
	shift to R11<39, 1, expr_list_in_pares> =  by <rbrace>
	shift to R1<91, 0, start> =  by <rbrace>
.M37<67, 1, stmt_else> = <else>
	shift to R23<87, 0, stmts> =  by <lbrace> <rbrace>
	shift to M18<89, 1, block> =  by <lbrace>
	shift to M35<90, 1, block> =  by <lbrace>
.M38<68, 2, stmt_while> = <while> <lpare>
.R39<68, 2, stmt_while> = <while> <lpare>
	shift to M40<68, 4, stmt_while> =  by <rpare>
.M40<68, 4, stmt_while> = <while> <lpare> <rvalue> <rpare>
	shift to R23<87, 0, stmts> =  by <lbrace> <rbrace>
	shift to M18<89, 1, block> =  by <lbrace>
	shift to M35<90, 1, block> =  by <lbrace>
.M41<69, 6, stmt_for> = <for> <lpare> <ident> <in> <ident> <rpare>
	shift to R23<87, 0, stmts> =  by <lbrace> <rbrace>
	shift to M18<89, 1, block> =  by <lbrace>
	shift to M35<90, 1, block> =  by <lbrace>
.M42<74, 1, stmt_return> = <return>
.R43<41, 0, expr_map> =
	shift to M44<41, 2, expr_map> =  by <comma>
.M44<41, 2, expr_map> = <expr_map> <comma>
.R45<45, 1, object> = <tag_list>
	shift to R11<39, 1, expr_list_in_pares> =  by <lbrace> <rbrace>
	shift to M18<89, 1, block> =  by <lbrace>
	shift to M35<90, 1, block> =  by <lbrace>
.R46<20, 0, op_bit> =
	shift to M47<20, 2, op_bit> =  by <band>
.M47<20, 2, op_bit> = <rvalue> <band>
.R48<21, 0, op_bit> =
	shift to M49<21, 2, op_bit> =  by <bor>
.M49<21, 2, op_bit> = <rvalue> <bor>
.R50<11, 0, op_logic> =
	shift to M51<11, 2, op_logic> =  by <land>
.M51<11, 2, op_logic> = <rvalue> <land>
.R52<12, 0, op_logic> =
	shift to M53<12, 2, op_logic> =  by <lor>
.M53<12, 2, op_logic> = <rvalue> <lor>
.R54<13, 0, op_logic> =
	shift to M55<13, 2, op_logic> =  by <eq>
.M55<13, 2, op_logic> = <rvalue> <eq>
.R56<14, 0, op_logic> =
	shift to M57<14, 2, op_logic> =  by <ne>
.M57<14, 2, op_logic> = <rvalue> <ne>
.R58<15, 0, op_logic> =
	shift to M59<15, 2, op_logic> =  by <lt>
.M59<15, 2, op_logic> = <rvalue> <lt>
.R60<16, 0, op_logic> =
	shift to M61<16, 2, op_logic> =  by <le>
.M61<16, 2, op_logic> = <rvalue> <le>
.R62<17, 0, op_logic> =
	shift to M63<17, 2, op_logic> =  by <gt>
.M63<17, 2, op_logic> = <rvalue> <gt>
.R64<18, 0, op_logic> =
	shift to M65<18, 2, op_logic> =  by <ge>
.M65<18, 2, op_logic> = <rvalue> <ge>
.M66<6, 2, op_arithmatic> = <rvalue> <add>
.R67<7, 0, op_arithmatic> =
	shift to M68<7, 2, op_arithmatic> =  by <sub>
.M68<7, 2, op_arithmatic> = <rvalue> <sub>
.R69<8, 0, op_arithmatic> =
	shift to M70<8, 2, op_arithmatic> =  by <mul>
.M70<8, 2, op_arithmatic> = <rvalue> <mul>
.R71<9, 0, op_arithmatic> =
	shift to M72<9, 2, op_arithmatic> =  by <div>
.M72<9, 2, op_arithmatic> = <rvalue> <div>